<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penglecode.codeforce.mybatismds.examples.order.dal.mapper.OrderLineMapper">

    <sql id="UpdateDynamicColumnsClause">
        <trim suffixOverrides=",">
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'productId')">
                product_id = #{columns.productId, jdbcType=BIGINT},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'productName')">
                product_name = #{columns.productName, jdbcType=VARCHAR},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'productUrl')">
                product_url = #{columns.productUrl, jdbcType=VARCHAR},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'unitPrice')">
                unit_price = #{columns.unitPrice, jdbcType=INTEGER},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'unitPrice')">
                unit_price = #{columns.unitPrice, jdbcType=BIGINT},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'quantity')">
                quantity = #{columns.quantity, jdbcType=INTEGER},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'freight')">
                freight = #{columns.freight, jdbcType=BIGINT},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'subTotalAmount')">
                sub_total_amount = #{columns.subTotalAmount, jdbcType=BIGINT},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'orderStatus')">
                order_status = #{columns.orderStatus, jdbcType=VARCHAR},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'remark')">
                remark = #{columns.remark, jdbcType=VARCHAR},
            </if>
            <if test="@com.penglecode.codeforce.mybatismds.examples.common.mybatis.MapperHelper@containsColumn(columns, 'updateTime')">
                update_time = #{columns.updateTime, jdbcType=VARCHAR},
            </if>
        </trim>
    </sql>

    <insert id="insert" parameterType="com.penglecode.codeforce.mybatismds.examples.order.domain.model.OrderLine" statementType="PREPARED">
        INSERT INTO t_order_line (
            order_id,
            product_id,
            product_name,
            product_url,
            unit_price,
            quantity,
            freight,
            sub_total_amount,
            order_time,
            order_status,
            remark,
            create_time,
            update_time
        ) VALUES (
            #{orderId, jdbcType=BIGINT},
            #{productId, jdbcType=BIGINT},
            #{productName, jdbcType=VARCHAR},
            #{productUrl, jdbcType=VARCHAR},
            #{unitPrice, jdbcType=BIGINT},
            #{quantity, jdbcType=INTEGER},
            #{freight, jdbcType=BIGINT},
            #{subTotalAmount, jdbcType=BIGINT},
            #{orderTime, jdbcType=VARCHAR},
            #{orderStatus, jdbcType=VARCHAR},
            #{remark, jdbcType=VARCHAR},
            #{createTime, jdbcType=VARCHAR},
            #{updateTime, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateById" parameterType="java.util.Map" statementType="PREPARED">
        UPDATE t_order_line
           SET <include refid="UpdateDynamicColumnsClause"/>
         WHERE order_id = #{id.orderId, jdbcType=BIGINT} AND product_id = #{id.productId, jdbcType=BIGINT}
    </update>

    <delete id="deleteById" parameterType="java.util.Map" statementType="PREPARED">
        DELETE FROM t_order_line WHERE order_id = #{id.orderId, jdbcType=BIGINT} AND product_id = #{id.productId, jdbcType=BIGINT}
    </delete>

    <select id="selectById" parameterType="java.util.Map" resultType="com.penglecode.codeforce.mybatismds.examples.order.domain.model.OrderLine" statementType="PREPARED">
        SELECT * FROM t_order_line WHERE order_id = #{id.orderId, jdbcType=BIGINT} AND product_id = #{id.productId, jdbcType=BIGINT}
    </select>

    <select id="selectListByOrderId" parameterType="java.util.Map" resultType="com.penglecode.codeforce.mybatismds.examples.order.domain.model.OrderLine" statementType="PREPARED">
        SELECT * FROM t_order_line WHERE order_id = #{orderId, jdbcType=BIGINT} ORDER BY unit_price DESC
    </select>

</mapper>